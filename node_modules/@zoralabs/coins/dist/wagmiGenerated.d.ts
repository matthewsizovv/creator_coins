export declare const coinABI: readonly [{
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "_protocolRewardRecipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "_protocolRewards";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "_weth";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "_v3Factory";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "_swapRouter";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "_airlock";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "receive";
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "DOMAIN_SEPARATOR";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "MAX_TOTAL_SUPPLY";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "MIN_ORDER_SIZE";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "PLATFORM_REFERRER_FEE_BPS";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "PROTOCOL_FEE_BPS";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "TOKEN_CREATOR_FEE_BPS";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "TOTAL_FEE_BPS";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "TRADE_REFERRER_FEE_BPS";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "WETH";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "addOwner";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "accounts";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
    readonly name: "addOwners";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "airlock";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "allowance";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "approve";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "balanceOf";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "burn";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "orderSize";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "minAmountOut";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "sqrtPriceLimitX96";
        readonly internalType: "uint160";
        readonly type: "uint160";
    }, {
        readonly name: "tradeReferrer";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "buy";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "pushEthRewards";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
    readonly name: "claimSecondaryRewards";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "contractURI";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "contractVersion";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly stateMutability: "pure";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "currency";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "decimals";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "eip712Domain";
    readonly outputs: readonly [{
        readonly name: "fields";
        readonly internalType: "bytes1";
        readonly type: "bytes1";
    }, {
        readonly name: "name";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "version";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "chainId";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "verifyingContract";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "salt";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "extensions";
        readonly internalType: "uint256[]";
        readonly type: "uint256[]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "payoutRecipient_";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "owners_";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "tokenURI_";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "name_";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "symbol_";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "poolConfig_";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "platformReferrer_";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "isOwner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "name";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "nonces";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "owners";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "payoutRecipient";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "deadline";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "v";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "r";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }, {
        readonly name: "s";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "permit";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "platformReferrer";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "poolAddress";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "poolConfiguration";
    readonly outputs: readonly [{
        readonly name: "version";
        readonly internalType: "uint8";
        readonly type: "uint8";
    }, {
        readonly name: "tickLower";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "tickUpper";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "numPositions";
        readonly internalType: "uint16";
        readonly type: "uint16";
    }, {
        readonly name: "maxDiscoverySupplyShare";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "poolState";
    readonly outputs: readonly [{
        readonly name: "asset";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "numeraire";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "tickLower";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "tickUpper";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "numPositions";
        readonly internalType: "uint16";
        readonly type: "uint16";
    }, {
        readonly name: "isInitialized";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "isExited";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "maxShareToBeSold";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "totalTokensOnBondingCurve";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "protocolRewardRecipient";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "protocolRewards";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "removeOwner";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "accounts";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }];
    readonly name: "removeOwners";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "revokeOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "orderSize";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "minAmountOut";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "sqrtPriceLimitX96";
        readonly internalType: "uint160";
        readonly type: "uint160";
    }, {
        readonly name: "tradeReferrer";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "sell";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newURI";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly name: "setContractURI";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newPayoutRecipient";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "setPayoutRecipient";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "interfaceId";
        readonly internalType: "bytes4";
        readonly type: "bytes4";
    }];
    readonly name: "supportsInterface";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
    readonly stateMutability: "pure";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "swapRouter";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "symbol";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "tokenURI";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "totalSupply";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "transfer";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "transferFrom";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bool";
        readonly type: "bool";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "amount0Owed";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "amount1Owed";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "uniswapV3MintCallback";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "v3Factory";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Approval";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "buyer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tradeReferrer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "coinsPurchased";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "currency";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "amountFee";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "amountSold";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "CoinBuy";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "payoutRecipient";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "platformReferrer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "protocolRewardRecipient";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "currency";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "marketRewards";
        readonly internalType: "struct ICoin.MarketRewards";
        readonly type: "tuple";
        readonly components: readonly [{
            readonly name: "totalAmountCurrency";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "totalAmountCoin";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "creatorPayoutAmountCurrency";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "creatorPayoutAmountCoin";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "platformReferrerAmountCurrency";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "platformReferrerAmountCoin";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "protocolAmountCurrency";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }, {
            readonly name: "protocolAmountCoin";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly indexed: false;
    }];
    readonly name: "CoinMarketRewards";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "caller";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "prevRecipient";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newRecipient";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "CoinPayoutRecipientUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "seller";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tradeReferrer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "coinsSold";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "currency";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "amountFee";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "amountPurchased";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "CoinSell";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "payoutRecipient";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "platformReferrer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "tradeReferrer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "protocolRewardRecipient";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "creatorReward";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "platformReferrerReward";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "traderReferrerReward";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "protocolReward";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "currency";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }];
    readonly name: "CoinTradeRewards";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "amount";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "senderBalance";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }, {
        readonly name: "recipientBalance";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "CoinTransfer";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "caller";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newURI";
        readonly internalType: "string";
        readonly type: "string";
        readonly indexed: false;
    }, {
        readonly name: "name";
        readonly internalType: "string";
        readonly type: "string";
        readonly indexed: false;
    }];
    readonly name: "ContractMetadataUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [];
    readonly name: "ContractURIUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [];
    readonly name: "EIP712DomainChanged";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "version";
        readonly internalType: "uint64";
        readonly type: "uint64";
        readonly indexed: false;
    }];
    readonly name: "Initialized";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "caller";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "prevOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "OwnerUpdated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "from";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "to";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
        readonly indexed: false;
    }];
    readonly name: "Transfer";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "target";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "AddressEmptyCode";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "AddressInsufficientBalance";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "AddressZero";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "AlreadyOwner";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "CannotMintZeroLiquidity";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "DopplerPoolMustHaveMoreThan2DiscoveryPositions";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "ECDSAInvalidSignature";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "length";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "ECDSAInvalidSignatureLength";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "s";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "ECDSAInvalidSignatureS";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "allowance";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "needed";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "ERC20InsufficientAllowance";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "balance";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "needed";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "ERC20InsufficientBalance";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "approver";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "ERC20InvalidApprover";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "receiver";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "ERC20InvalidReceiver";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "sender";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "ERC20InvalidSender";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "spender";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "ERC20InvalidSpender";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "ERC20TransferAmountMismatch";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "deadline";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "ERC2612ExpiredSignature";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "signer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "ERC2612InvalidSigner";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "EthAmountMismatch";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "EthAmountTooSmall";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "EthTransferFailed";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "EthTransferInvalid";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "FailedInnerCall";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "InitialOrderSizeTooLarge";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "InsufficientFunds";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "InsufficientLiquidity";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "currentNonce";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "InvalidAccountNonce";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "InvalidCurrencyLowerTick";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "InvalidInitialization";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "InvalidMarketType";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "InvalidPoolVersion";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "tickLower";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "tickUpper";
        readonly internalType: "int24";
        readonly type: "int24";
    }];
    readonly name: "InvalidTickRangeMisordered";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "InvalidWethLowerTick";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "LegacyPoolMustHaveOneDiscoveryPosition";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "MarketAlreadyGraduated";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "MarketNotGraduated";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "value";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "limit";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "MaxShareToBeSoldExceeded";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "NotInitializing";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "NotOwner";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "NumDiscoveryPositionsOutOfRange";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "OneOwnerRequired";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "OnlyOwner";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "OnlyPool";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "OnlyWeth";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "OwnerCannotBeAddressZero";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "ReentrancyGuardReentrantCall";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "SafeERC20FailedOperation";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "SlippageBoundsExceeded";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "UseRevokeOwnershipToRemoveSelf";
}];
export declare const iUniswapV3PoolABI: readonly [{
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "tickLower";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "tickUpper";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "amount";
        readonly internalType: "uint128";
        readonly type: "uint128";
    }];
    readonly name: "burn";
    readonly outputs: readonly [{
        readonly name: "amount0";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "amount1";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "tickLower";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "tickUpper";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "amount0Requested";
        readonly internalType: "uint128";
        readonly type: "uint128";
    }, {
        readonly name: "amount1Requested";
        readonly internalType: "uint128";
        readonly type: "uint128";
    }];
    readonly name: "collect";
    readonly outputs: readonly [{
        readonly name: "amount0";
        readonly internalType: "uint128";
        readonly type: "uint128";
    }, {
        readonly name: "amount1";
        readonly internalType: "uint128";
        readonly type: "uint128";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "feeGrowthGlobal0X128";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "feeGrowthGlobal1X128";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "sqrtPriceX96";
        readonly internalType: "uint160";
        readonly type: "uint160";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "tickLower";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "tickUpper";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "amount";
        readonly internalType: "uint128";
        readonly type: "uint128";
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "mint";
    readonly outputs: readonly [{
        readonly name: "amount0";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }, {
        readonly name: "amount1";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "slot0";
    readonly outputs: readonly [{
        readonly name: "slot0";
        readonly internalType: "struct IUniswapV3Pool.Slot0";
        readonly type: "tuple";
        readonly components: readonly [{
            readonly name: "sqrtPriceX96";
            readonly internalType: "uint160";
            readonly type: "uint160";
        }, {
            readonly name: "tick";
            readonly internalType: "int24";
            readonly type: "int24";
        }, {
            readonly name: "observationIndex";
            readonly internalType: "uint16";
            readonly type: "uint16";
        }, {
            readonly name: "observationCardinality";
            readonly internalType: "uint16";
            readonly type: "uint16";
        }, {
            readonly name: "observationCardinalityNext";
            readonly internalType: "uint16";
            readonly type: "uint16";
        }, {
            readonly name: "feeProtocol";
            readonly internalType: "uint8";
            readonly type: "uint8";
        }, {
            readonly name: "unlocked";
            readonly internalType: "bool";
            readonly type: "bool";
        }];
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "recipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "zeroForOne";
        readonly internalType: "bool";
        readonly type: "bool";
    }, {
        readonly name: "amountSpecified";
        readonly internalType: "int256";
        readonly type: "int256";
    }, {
        readonly name: "sqrtPriceLimitX96";
        readonly internalType: "uint160";
        readonly type: "uint160";
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "swap";
    readonly outputs: readonly [{
        readonly name: "amount0";
        readonly internalType: "int256";
        readonly type: "int256";
    }, {
        readonly name: "amount1";
        readonly internalType: "int256";
        readonly type: "int256";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "token0";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "token1";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
}];
/**
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0x777777751622c0d3258f214F9DF38E35BF45baF3)
 * - [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x777777751622c0d3258f214F9DF38E35BF45baF3)
 */
export declare const zoraFactoryImplABI: readonly [{
    readonly type: "constructor";
    readonly inputs: readonly [{
        readonly name: "_coinImpl";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "UPGRADE_INTERFACE_VERSION";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "string";
        readonly type: "string";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "coinImpl";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "payoutRecipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "owners";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "uri";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "name";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "symbol";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "platformReferrer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "currency";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "tickLower";
        readonly internalType: "int24";
        readonly type: "int24";
    }, {
        readonly name: "orderSize";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "deploy";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "payoutRecipient";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "owners";
        readonly internalType: "address[]";
        readonly type: "address[]";
    }, {
        readonly name: "uri";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "name";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "symbol";
        readonly internalType: "string";
        readonly type: "string";
    }, {
        readonly name: "poolConfig";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }, {
        readonly name: "platformReferrer";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "orderSize";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly name: "deploy";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "";
        readonly internalType: "uint256";
        readonly type: "uint256";
    }];
    readonly stateMutability: "payable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "implementation";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "initialOwner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "initialize";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "owner";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "proxiableUUID";
    readonly outputs: readonly [{
        readonly name: "";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly stateMutability: "view";
}, {
    readonly type: "function";
    readonly inputs: readonly [];
    readonly name: "renounceOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "transferOwnership";
    readonly outputs: readonly [];
    readonly stateMutability: "nonpayable";
}, {
    readonly type: "function";
    readonly inputs: readonly [{
        readonly name: "newImplementation";
        readonly internalType: "address";
        readonly type: "address";
    }, {
        readonly name: "data";
        readonly internalType: "bytes";
        readonly type: "bytes";
    }];
    readonly name: "upgradeToAndCall";
    readonly outputs: readonly [];
    readonly stateMutability: "payable";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "caller";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "payoutRecipient";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "platformReferrer";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "currency";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "uri";
        readonly internalType: "string";
        readonly type: "string";
        readonly indexed: false;
    }, {
        readonly name: "name";
        readonly internalType: "string";
        readonly type: "string";
        readonly indexed: false;
    }, {
        readonly name: "symbol";
        readonly internalType: "string";
        readonly type: "string";
        readonly indexed: false;
    }, {
        readonly name: "coin";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "pool";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: false;
    }, {
        readonly name: "version";
        readonly internalType: "string";
        readonly type: "string";
        readonly indexed: false;
    }];
    readonly name: "CoinCreated";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "version";
        readonly internalType: "uint64";
        readonly type: "uint64";
        readonly indexed: false;
    }];
    readonly name: "Initialized";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "previousOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }, {
        readonly name: "newOwner";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "OwnershipTransferred";
}, {
    readonly type: "event";
    readonly anonymous: false;
    readonly inputs: readonly [{
        readonly name: "implementation";
        readonly internalType: "address";
        readonly type: "address";
        readonly indexed: true;
    }];
    readonly name: "Upgraded";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "target";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "AddressEmptyCode";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "AddressInsufficientBalance";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "ERC1167FailedCreateClone";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "implementation";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "ERC1967InvalidImplementation";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "ERC1967NonPayable";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "ERC20TransferAmountMismatch";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "EthTransferInvalid";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "FailedInnerCall";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "InvalidInitialization";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "NotInitializing";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "owner";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "OwnableInvalidOwner";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "account";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "OwnableUnauthorizedAccount";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "ReentrancyGuardReentrantCall";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "token";
        readonly internalType: "address";
        readonly type: "address";
    }];
    readonly name: "SafeERC20FailedOperation";
}, {
    readonly type: "error";
    readonly inputs: readonly [];
    readonly name: "UUPSUnauthorizedCallContext";
}, {
    readonly type: "error";
    readonly inputs: readonly [{
        readonly name: "slot";
        readonly internalType: "bytes32";
        readonly type: "bytes32";
    }];
    readonly name: "UUPSUnsupportedProxiableUUID";
}];
/**
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0x777777751622c0d3258f214F9DF38E35BF45baF3)
 * - [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x777777751622c0d3258f214F9DF38E35BF45baF3)
 */
export declare const zoraFactoryImplAddress: {
    readonly 8453: "0x777777751622c0d3258f214F9DF38E35BF45baF3";
    readonly 84532: "0x777777751622c0d3258f214F9DF38E35BF45baF3";
};
/**
 * - [__View Contract on Base Basescan__](https://basescan.org/address/0x777777751622c0d3258f214F9DF38E35BF45baF3)
 * - [__View Contract on Base Sepolia Basescan__](https://sepolia.basescan.org/address/0x777777751622c0d3258f214F9DF38E35BF45baF3)
 */
export declare const zoraFactoryImplConfig: {
    readonly address: {
        readonly 8453: "0x777777751622c0d3258f214F9DF38E35BF45baF3";
        readonly 84532: "0x777777751622c0d3258f214F9DF38E35BF45baF3";
    };
    readonly abi: readonly [{
        readonly type: "constructor";
        readonly inputs: readonly [{
            readonly name: "_coinImpl";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "UPGRADE_INTERFACE_VERSION";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "string";
            readonly type: "string";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "coinImpl";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "payoutRecipient";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "owners";
            readonly internalType: "address[]";
            readonly type: "address[]";
        }, {
            readonly name: "uri";
            readonly internalType: "string";
            readonly type: "string";
        }, {
            readonly name: "name";
            readonly internalType: "string";
            readonly type: "string";
        }, {
            readonly name: "symbol";
            readonly internalType: "string";
            readonly type: "string";
        }, {
            readonly name: "platformReferrer";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "currency";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "tickLower";
            readonly internalType: "int24";
            readonly type: "int24";
        }, {
            readonly name: "orderSize";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "payoutRecipient";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "owners";
            readonly internalType: "address[]";
            readonly type: "address[]";
        }, {
            readonly name: "uri";
            readonly internalType: "string";
            readonly type: "string";
        }, {
            readonly name: "name";
            readonly internalType: "string";
            readonly type: "string";
        }, {
            readonly name: "symbol";
            readonly internalType: "string";
            readonly type: "string";
        }, {
            readonly name: "poolConfig";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }, {
            readonly name: "platformReferrer";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "orderSize";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly name: "deploy";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "";
            readonly internalType: "uint256";
            readonly type: "uint256";
        }];
        readonly stateMutability: "payable";
    }, {
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "implementation";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "initialOwner";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "initialize";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "owner";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "proxiableUUID";
        readonly outputs: readonly [{
            readonly name: "";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly stateMutability: "view";
    }, {
        readonly type: "function";
        readonly inputs: readonly [];
        readonly name: "renounceOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "newOwner";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "transferOwnership";
        readonly outputs: readonly [];
        readonly stateMutability: "nonpayable";
    }, {
        readonly type: "function";
        readonly inputs: readonly [{
            readonly name: "newImplementation";
            readonly internalType: "address";
            readonly type: "address";
        }, {
            readonly name: "data";
            readonly internalType: "bytes";
            readonly type: "bytes";
        }];
        readonly name: "upgradeToAndCall";
        readonly outputs: readonly [];
        readonly stateMutability: "payable";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "caller";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "payoutRecipient";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "platformReferrer";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "currency";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }, {
            readonly name: "uri";
            readonly internalType: "string";
            readonly type: "string";
            readonly indexed: false;
        }, {
            readonly name: "name";
            readonly internalType: "string";
            readonly type: "string";
            readonly indexed: false;
        }, {
            readonly name: "symbol";
            readonly internalType: "string";
            readonly type: "string";
            readonly indexed: false;
        }, {
            readonly name: "coin";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }, {
            readonly name: "pool";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: false;
        }, {
            readonly name: "version";
            readonly internalType: "string";
            readonly type: "string";
            readonly indexed: false;
        }];
        readonly name: "CoinCreated";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "version";
            readonly internalType: "uint64";
            readonly type: "uint64";
            readonly indexed: false;
        }];
        readonly name: "Initialized";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "previousOwner";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }, {
            readonly name: "newOwner";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }];
        readonly name: "OwnershipTransferred";
    }, {
        readonly type: "event";
        readonly anonymous: false;
        readonly inputs: readonly [{
            readonly name: "implementation";
            readonly internalType: "address";
            readonly type: "address";
            readonly indexed: true;
        }];
        readonly name: "Upgraded";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "target";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "AddressEmptyCode";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "account";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "AddressInsufficientBalance";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "ERC1167FailedCreateClone";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "implementation";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "ERC1967InvalidImplementation";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "ERC1967NonPayable";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "ERC20TransferAmountMismatch";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "EthTransferInvalid";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "FailedInnerCall";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "InvalidInitialization";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "NotInitializing";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "owner";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "OwnableInvalidOwner";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "account";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "OwnableUnauthorizedAccount";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "ReentrancyGuardReentrantCall";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "token";
            readonly internalType: "address";
            readonly type: "address";
        }];
        readonly name: "SafeERC20FailedOperation";
    }, {
        readonly type: "error";
        readonly inputs: readonly [];
        readonly name: "UUPSUnauthorizedCallContext";
    }, {
        readonly type: "error";
        readonly inputs: readonly [{
            readonly name: "slot";
            readonly internalType: "bytes32";
            readonly type: "bytes32";
        }];
        readonly name: "UUPSUnsupportedProxiableUUID";
    }];
};
//# sourceMappingURL=wagmiGenerated.d.ts.map