import { Address, SimulateContractParameters, WalletClient } from "viem";
import { GenericPublicClient } from "src/utils/genericPublicClient";
export type UpdateCoinURIArgs = {
    coin: Address;
    newURI: string;
};
export declare function updateCoinURICall({ newURI, coin, }: UpdateCoinURIArgs): SimulateContractParameters;
export declare function updateCoinURI(args: UpdateCoinURIArgs, walletClient: WalletClient, publicClient: GenericPublicClient): Promise<{
    hash: `0x${string}`;
    receipt: any;
    uriUpdated: ({
        address: Address;
        blockHash: `0x${string}`;
        blockNumber: bigint;
        data: import("viem").Hex;
        logIndex: number;
        transactionHash: `0x${string}`;
        transactionIndex: number;
        removed: boolean;
    } & {
        args: readonly [];
        eventName: "ContractURIUpdated";
        topics: [`0x${string}`];
    }) | undefined;
}>;
//# sourceMappingURL=updateCoinURI.d.ts.map