// This file is auto-generated by @hey-api/openapi-ts

export type GetCoinData = {
  body?: never;
  path?: never;
  query: {
    address: string;
    chain?: number;
  };
  url: "/coin";
};

export type GetCoinErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetCoinResponses = {
  /**
   * Successful operation
   */
  200: {
    zora20Token?: {
      /**
       * The Globally Unique ID of this object
       */
      id: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      name: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      description: string;
      address: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      symbol: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      totalSupply: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      totalVolume: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      volume24h: string;
      /**
       * Date with time (isoformat)
       */
      createdAt?: string;
      creatorAddress?: string;
      creatorEarnings: Array<{
        amount: {
          currencyAddress: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          amountRaw: string;
          /**
           * The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
           */
          amountDecimal: number;
        };
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        amountUsd?: string;
      }>;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      marketCap: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      marketCapDelta24h: string;
      /**
       * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
       */
      chainId: number;
      creatorProfile?: {
        /**
         * The Globally Unique ID of this object
         */
        id: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        handle: string;
        avatar?: {
          previewImage: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            blurhash?: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            medium: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            small: string;
          };
        };
      };
      mediaContent?: {
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        mimeType?: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        originalUri: string;
        previewImage?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          small: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          medium: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          blurhash?: string;
        };
      };
      transfers: {
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
      };
      /**
       * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
       */
      uniqueHolders: number;
      zoraComments: {
        pageInfo: {
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
        };
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            txHash: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            comment: string;
            userAddress: string;
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            timestamp: number;
            userProfile?: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              handle: string;
              avatar?: {
                previewImage: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                };
              };
            };
          };
        }>;
      };
    };
  };
};

export type GetCoinResponse = GetCoinResponses[keyof GetCoinResponses];

export type GetCoinCommentsData = {
  body?: never;
  path?: never;
  query: {
    address: string;
    chain?: number;
    after?: string;
    count?: number;
  };
  url: "/coinComments";
};

export type GetCoinCommentsErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetCoinCommentsResponses = {
  /**
   * Successful operation
   */
  200: {
    zora20Token?: {
      zoraComments: {
        pageInfo: {
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
        };
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            txHash: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            comment: string;
            userAddress: string;
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            timestamp: number;
            userProfile?: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              handle: string;
              avatar?: {
                previewImage: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                };
              };
            };
            replies: {
              /**
               * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
               */
              count: number;
              edges: Array<{
                node: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  txHash: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  comment: string;
                  userAddress: string;
                  /**
                   * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
                   */
                  timestamp: number;
                  userProfile?: {
                    /**
                     * The Globally Unique ID of this object
                     */
                    id: string;
                    /**
                     * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                     */
                    handle: string;
                    avatar?: {
                      previewImage: {
                        /**
                         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                         */
                        blurhash?: string;
                        /**
                         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                         */
                        small: string;
                        /**
                         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                         */
                        medium: string;
                      };
                    };
                  };
                };
              }>;
            };
          };
        }>;
      };
    };
  };
};

export type GetCoinCommentsResponse =
  GetCoinCommentsResponses[keyof GetCoinCommentsResponses];

export type GetCoinsData = {
  body?: never;
  path?: never;
  query: {
    coins: Array<{
      /**
       * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
       */
      chainId: number;
      collectionAddress: string;
    }>;
  };
  url: "/coins";
};

export type GetCoinsErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetCoinsResponses = {
  /**
   * Successful operation
   */
  200: {
    zora20Tokens: Array<{
      /**
       * The Globally Unique ID of this object
       */
      id: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      name: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      description: string;
      address: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      symbol: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      totalSupply: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      totalVolume: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      volume24h: string;
      /**
       * Date with time (isoformat)
       */
      createdAt?: string;
      creatorAddress?: string;
      creatorEarnings: Array<{
        amount: {
          currencyAddress: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          amountRaw: string;
          /**
           * The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
           */
          amountDecimal: number;
        };
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        amountUsd?: string;
      }>;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      marketCap: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      marketCapDelta24h: string;
      /**
       * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
       */
      chainId: number;
      creatorProfile?: {
        /**
         * The Globally Unique ID of this object
         */
        id: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        handle: string;
        avatar?: {
          previewImage: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            blurhash?: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            medium: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            small: string;
          };
        };
      };
      mediaContent?: {
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        mimeType?: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        originalUri: string;
        previewImage?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          small: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          medium: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          blurhash?: string;
        };
      };
      transfers: {
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
      };
      /**
       * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
       */
      uniqueHolders: number;
      zoraComments: {
        pageInfo: {
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
        };
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            txHash: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            comment: string;
            userAddress: string;
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            timestamp: number;
            userProfile?: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              handle: string;
              avatar?: {
                previewImage: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                };
              };
            };
          };
        }>;
      };
    }>;
  };
};

export type GetCoinsResponse = GetCoinsResponses[keyof GetCoinsResponses];

export type GetExploreData = {
  body?: never;
  path?: never;
  query: {
    listType:
      | "TOP_GAINERS"
      | "TOP_VOLUME_24H"
      | "MOST_VALUABLE"
      | "NEW"
      | "LAST_TRADED"
      | "LAST_TRADED_UNIQUE";
    count?: number;
    after?: string;
  };
  url: "/explore";
};

export type GetExploreErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetExploreResponses = {
  /**
   * Successful operation
   */
  200: {
    exploreList: {
      edges: Array<{
        node: {
          /**
           * The Globally Unique ID of this object
           */
          id: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          name: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          description: string;
          address: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          symbol: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          totalSupply: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          totalVolume: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          volume24h: string;
          /**
           * Date with time (isoformat)
           */
          createdAt?: string;
          creatorAddress?: string;
          creatorEarnings: Array<{
            amount: {
              currencyAddress: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              amountRaw: string;
              /**
               * The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
               */
              amountDecimal: number;
            };
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            amountUsd?: string;
          }>;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          marketCap: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          marketCapDelta24h: string;
          /**
           * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
           */
          chainId: number;
          creatorProfile?: {
            /**
             * The Globally Unique ID of this object
             */
            id: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            handle: string;
            avatar?: {
              previewImage: {
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                blurhash?: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                medium: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                small: string;
              };
            };
          };
          mediaContent?: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            mimeType?: string;
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            originalUri: string;
            previewImage?: {
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              small: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              medium: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              blurhash?: string;
            };
          };
          transfers: {
            /**
             * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
             */
            count: number;
          };
          /**
           * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
           */
          uniqueHolders: number;
        };
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        cursor: string;
      }>;
      pageInfo: {
        /**
         * When paginating forwards, the cursor to continue.
         */
        endCursor?: string;
        /**
         * When paginating forwards, are there more items?
         */
        hasNextPage: boolean;
      };
    };
  };
};

export type GetExploreResponse = GetExploreResponses[keyof GetExploreResponses];

export type GetProfileData = {
  body?: never;
  path?: never;
  query: {
    identifier: string;
  };
  url: "/profile";
};

export type GetProfileErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetProfileResponses = {
  /**
   * Successful operation
   */
  200: {
    profile?: {
      /**
       * The Globally Unique ID of this object
       */
      id: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      handle: string;
      avatar?: {
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        small: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        medium: string;
        /**
         * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
         */
        blurhash?: string;
      };
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      username: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      displayName?: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      bio: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      website?: string;
      publicWallet: {
        walletAddress: string;
      };
      socialAccounts: {
        instagram?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          displayName?: string;
        };
        tiktok?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          displayName?: string;
        };
        twitter?: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          displayName?: string;
        };
      };
      linkedWallets: {
        edges: Array<{
          node: {
            walletType: "PRIVY" | "EXTERNAL" | "SMART_WALLET";
            walletAddress: string;
          };
        }>;
      };
    };
  };
};

export type GetProfileResponse = GetProfileResponses[keyof GetProfileResponses];

export type GetProfileBalancesData = {
  body?: never;
  path?: never;
  query: {
    identifier: string;
    count?: number;
    after?: string;
    chainIds?: Array<number>;
  };
  url: "/profileBalances";
};

export type GetProfileBalancesErrors = {
  /**
   * Bad request
   */
  400: unknown;
  /**
   * Internal server error
   */
  500: unknown;
};

export type GetProfileBalancesResponses = {
  /**
   * Successful operation
   */
  200: {
    profile?: {
      /**
       * The Globally Unique ID of this object
       */
      id: string;
      /**
       * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
       */
      handle: string;
      avatar?: {
        previewImage: {
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          blurhash?: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          medium: string;
          /**
           * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
           */
          small: string;
        };
      };
      coinBalances: {
        /**
         * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
         */
        count: number;
        edges: Array<{
          node: {
            /**
             * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
             */
            balance: string;
            /**
             * The Globally Unique ID of this object
             */
            id: string;
            coin?: {
              /**
               * The Globally Unique ID of this object
               */
              id: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              name: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              description: string;
              address: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              symbol: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              totalSupply: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              totalVolume: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              volume24h: string;
              /**
               * Date with time (isoformat)
               */
              createdAt?: string;
              creatorAddress?: string;
              creatorEarnings: Array<{
                amount: {
                  currencyAddress: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  amountRaw: string;
                  /**
                   * The `Float` scalar type represents signed double-precision fractional values as specified by [IEEE 754](https://en.wikipedia.org/wiki/IEEE_floating_point).
                   */
                  amountDecimal: number;
                };
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                amountUsd?: string;
              }>;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              marketCap: string;
              /**
               * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
               */
              marketCapDelta24h: string;
              /**
               * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
               */
              chainId: number;
              creatorProfile?: {
                /**
                 * The Globally Unique ID of this object
                 */
                id: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                handle: string;
                avatar?: {
                  previewImage: {
                    /**
                     * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                     */
                    blurhash?: string;
                    /**
                     * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                     */
                    medium: string;
                    /**
                     * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                     */
                    small: string;
                  };
                };
              };
              mediaContent?: {
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                mimeType?: string;
                /**
                 * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                 */
                originalUri: string;
                previewImage?: {
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  small: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  medium: string;
                  /**
                   * The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.
                   */
                  blurhash?: string;
                };
              };
              transfers: {
                /**
                 * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
                 */
                count: number;
              };
              /**
               * The `Int` scalar type represents non-fractional signed whole numeric values. Int can represent values between -(2^31) and 2^31 - 1.
               */
              uniqueHolders: number;
            };
          };
        }>;
        pageInfo: {
          /**
           * When paginating forwards, are there more items?
           */
          hasNextPage: boolean;
          /**
           * When paginating forwards, the cursor to continue.
           */
          endCursor?: string;
        };
      };
    };
  };
};

export type GetProfileBalancesResponse =
  GetProfileBalancesResponses[keyof GetProfileBalancesResponses];

export type ClientOptions = {
  baseUrl:
    | "https://api-sdk.zora.engineering/"
    | "https://api-sdk-staging.zora.engineering/"
    | (string & {});
};
